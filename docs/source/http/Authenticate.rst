Authenticate
============

.. contents::
   :local:


Authenticate v3
---------------

.. http:post:: /V3/Authenticate

    :reqheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`
    
    :query type: Параметр type обозначает метод, которым пользователь хочет аутентифицироваться. Параметр не может быть пустым и принимает значения

    :statuscode 200: операция успешно завершена;
    :statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры;
    :statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization``, или в этом заголовке отсутствует параметр *ddauth_api_client_id*, или переданный в нем ключ разработчика не зарегистрирован в Диадоке;
    :statuscode 405: используется неподходящий HTTP-метод;
    :statuscode 500: при обработке запроса возникла непредвиденная ошибка.
    
Параметр *type* может принмать значения:
    
    + password - логин и пароль
    + sid - `auth.sid <https://docs-ke.readthedocs.io/ru/latest/auth/auth.sid.html>`__ из API Аутентификатора
    + certificate - сертификат
    + trust - доверительная аутентификаци

В версии v3 от передаваемого параметра *type* зависит тело запроса.

- **Аутентификация по логину и паролю** :
    
Необходимо указывать type - password, и в теле запроса передавать сериализованный объект.
Возможно передавть данные в формате json, в этом случае необходимо указать заголовок *Content-Type: application/json*

.. code-block:: json 
   
    { 
        "login" : "login", 
        "password" : "pass" 
    }

Либо передавать в формате protobuf. В этом случае Content-Type указывать не обязательно, так как по умолчанию десериализация происходит из protobuf.

.. code-block:: protobuf

    message LoginPassword {
        required string Login = 1;
        required string Password = 2;
    }

- **Аутентификация по auth.sid API аутентификатора** :

Необходимо указать type - sid, в теле запроса передавая `auth.sid <https://docs-ke.readthedocs.io/ru/latest/auth/auth.sid.html>`__ c заголовком *Content-Type: text/plain*

- **Аутентификация по сертификату**:
Необходимо указать type - certificate, в теле запроса передавая сертификат в виде массива байт закодированного в base64 c заголовком 
*Content-Type: application/octet-stream*.
Ответ метода необходимо интерпретировать как зашифрованную строку, аналогично `Authenticate V2`_ , расшифровать закрытым ключом сертификата, и передать в :doc:`AuthenticateConfirm`

- **Доверительная аутентификация**

Чтобы сохранить привязку(Binding) для доверительной аутентификации, необходимо авторизоваться с помощью пароля или сертификата, с указанием заголовков:

    + X-Diadoc-ServiceKey (ServiceKey)
    + X-Diadoc-ServiceUserId (ServiceUserId)

Чтобы воспользоваться доверительной аутентификацией, необходимо указать type - trust, с указанием заголовков X-Diadoc-ServiceKey, X-Diadoc-ServiceUserId, после создания привязки.

Authenticate v2
---------------

.. warning::
    Метод является устаревшим, для получения шаблона документа необходимо использовать метод `Authenticate V3`_

.. http:post:: /V2/Authenticate
 
    :reqheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`
    
    :query login: имя учетной записи пользователя при авторизации по логину/паролю (может отсутствовать);
    :query password: пароль учетной записи пользователя при авторизации по логину/паролю (обязателен при наличии параметра *login*);
    :query key: ключ, полученный доверенным сервисом (может отсутствовать);
    :query id: идентификатор пользователя доверенного сервиса (обязателен при наличии параметра *key*);

    :statuscode 200: операция успешно завершена;
    :statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры;
    :statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization``, или в этом заголовке отсутствует параметр *ddauth_api_client_id*, или переданный в нем ключ разработчика не зарегистрирован в Диадоке;
    :statuscode 405: используется неподходящий HTTP-метод;
    :statuscode 500: при обработке запроса возникла непредвиденная ошибка.

Тело запроса:

-  в случае авторизации по сертификату должно содержать :rfc:`X.509 <5280>` сертификат пользователя, сериализованный в `DER <http://www.itu.int/ITU-T/studygroups/com17/languages/X.690-0207.pdf>`__.

-  в остальных случаях тело запроса должно быть пустым

Для аутентификации по ключу, полученному доверенным сервисом, нужно передать этот ключ в параметре *key*;

В случае успешного выполнения запроса:

- если авторизация производится по логину/паролю или по ключу, полученному доверенным сервисом, тело ответа следует интерпретировать как строку в кодировке UTF-8, содержащую авторизационный токен;

- авторизация по сертификату является двухфазной. В этом случае ответ следует интерпретировать как зашифрованную строку. Для получения авторизационного токена необходимо расшифровать ее сертификатом с закрытым ключом и подтвердить расшифровку с помощью запроса :doc:`AuthenticateConfirm`;

В случае авторизации по логину/паролю с указанием ключа, полученного доверенным сервисом, привязка пользователя доверенного сервиса сохраняется автоматически (см. описание привязки в методе :doc:`AuthenticateConfirm`).

Authenticate v1
---------------
.. warning::
    Метод является устаревшим, для получения шаблона документа необходимо использовать метод `Authenticate V3`_

.. http:post:: /Authenticate
    
    :reqheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`
    
    :query login: имя учетной записи пользователя при авторизации по логину/паролю (может отсутствовать);
    :query password: пароль учетной записи пользователя при авторизации по логину/паролю (обязателен при наличии параметра *login*);
    :query key: ключ, полученный доверенным сервисом (может отсутствовать);
    :query id: идентификатор пользователя доверенного сервиса (обязателен при наличии параметра *key*);

    :statuscode 200: операция успешно завершена;
    :statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры;
    :statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization``, или в этом заголовке отсутствует параметр *ddauth_api_client_id*, или переданный в нем ключ разработчика не зарегистрирован в Диадоке;
    :statuscode 405: используется неподходящий HTTP-метод;
    :statuscode 500: при обработке запроса возникла непредвиденная ошибка.

Тело запроса:

-  в случае авторизации по сертификату должно содержать :rfc:`X.509 <5280>` сертификат пользователя, сериализованный в `DER <http://www.itu.int/ITU-T/studygroups/com17/languages/X.690-0207.pdf>`__.

-  в остальных случаях должно быть пустым

Для аутентификации по ключу, полученному доверенным сервисом, нужно передать этот ключ в параметре *key* (не поддерживается при аутентификации по сертификату).

В случае успешного выполнения запроса:

- если авторизация производится по логину/паролю или по ключу, полученному доверенным сервисом, тело ответа следует интерпретировать как строку в кодировке UTF-8, содержащую авторизационный токен;

- если авторизация производится по сертификату, то выдаваемый токен будет зашифрован в адрес пользовательского сертификата. В этом случае тело ответа следует интерпретировать как структуру :rfc:`CMS EnvelopedData <5652#section-6>` в DER-кодировке;

В случае авторизации по логину/паролю с указанием ключа, полученного доверенным сервисом, привязка пользователя доверенного сервиса сохраняется автоматически (см. описание привязки в методе :doc:`AuthenticateConfirm`).